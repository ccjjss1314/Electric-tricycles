<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\ADC_DMA.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\ADC_DMA.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Nov 06 15:37:47 2023
<BR><P>
<H3>Maximum Stack Usage =        156 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UserSystemInit &rArr; Usart1_Init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC_IRQHandler</a><BR>
 <LI><a href="#[1a9]">rbRead</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a9]">rbRead</a><BR>
 <LI><a href="#[1ac]">rbWrite</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1ac]">rbWrite</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3c]">CAN_RX0_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3d]">CAN_RX1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3e]">CAN_SCE_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3b]">CAN_TX_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1f]">COMP_1_2_3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[15]">DMA_Channel1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[16]">DMA_Channel2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[17]">DMA_Channel3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[18]">DMA_Channel4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[19]">DMA_Channel5_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1a]">DMA_Channel6_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1b]">DMA_Channel7_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1c]">DMA_Channel8_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[31]">EXTI15_10_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[20]">EXTI9_5_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[29]">I2C1_ER_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[28]">I2C1_EV_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2b]">I2C2_ER_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2a]">I2C2_EV_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[33]">LPTIM_WKUP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1e]">MMU_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[32]">RTCAlarm_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[c]">RTC_TAMPER_STAMP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2c]">SPI1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2d]">SPI2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[40]">System_Initializes</a> from system_n32g430_1.o(.text) referenced from startup_n32g430.o(.text)
 <LI><a href="#[21]">TIM1_BRK_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[24]">TIM1_CC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[23]">TIM1_TRG_COM_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[22]">TIM1_UP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[25]">TIM2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[26]">TIM3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[27]">TIM4_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[39]">TIM5_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3a]">TIM6_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[34]">TIM8_BRK_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[37]">TIM8_CC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[36]">TIM8_TRG_COM_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[35]">TIM8_UP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[30]">UART3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[38]">UART4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2e]">USART1_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2f]">USART2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[41]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_n32g430.o(.text)
 <LI><a href="#[44]">fputc</a> from usart.o(.text) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[3f]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[42]">prvIdleTask</a> from tasks.o(.text) referenced from tasks.o(.text)
 <LI><a href="#[43]">prvTaskExitError</a> from port.o(.text) referenced from port.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[41]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(.text)
</UL>
<P><STRONG><a name="[1fa]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[45]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1f6]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1fb]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1fc]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1fd]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1fe]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1ff]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1ed]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[1ec]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1ef]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>COMP_1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>LPTIM_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>MMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>System_Initializes</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, system_n32g430_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = System_Initializes &rArr; System_Clock_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Clock_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(.text)
</UL>
<P><STRONG><a name="[200]"></a>System_Clock_Frequency_Update</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, system_n32g430_1.o(.text), UNUSED)

<P><STRONG><a name="[201]"></a>ADC_Vrefint_Get</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>ADC_Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Reset
</UL>

<P><STRONG><a name="[4c]"></a>ADC_Multichannels_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4d]"></a>ADC_Multichannels_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4e]"></a>ADC_Continue_Conversion_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4f]"></a>ADC_Continue_Conversion_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[50]"></a>ADC_Regular_Group_External_Trigger_Source_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[51]"></a>ADC_Data_Alignment_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[52]"></a>ADC_Regular_Channels_Number_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[4b]"></a>ADC_Initializes</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADC_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Channels_Number_Config
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Data_Alignment_Config
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Group_External_Trigger_Source_Config
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Continue_Conversion_Disable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Continue_Conversion_Enable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Multichannels_Disable
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Multichannels_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[129]"></a>ADC_Initializes_Structure</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[12a]"></a>ADC_ON</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[202]"></a>ADC_OFF</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[203]"></a>ADC_DMA_Transfer_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>ADC_DMA_Transfer_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>ADC_Interrupts_Enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[59]"></a>ADC_Interrupts_Disable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[12c]"></a>ADC_Calibration_Operation</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[12d]"></a>ADC_Regular_Channels_Software_Conversion_Operation</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetData
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[205]"></a>ADC_Discontinuous_Mode_Channel_Count_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[206]"></a>ADC_Discontinuous_Mode_Config</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>ADC_Channel_Sample_Time_Config</STRONG> (Thumb, 140 bytes, Stack size 12 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Channel_Sample_Time_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetData
</UL>

<P><STRONG><a name="[130]"></a>ADC_Regular_Sequence_Conversion_Number_Config</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Regular_Sequence_Conversion_Number_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetData
</UL>

<P><STRONG><a name="[207]"></a>ADC_External_Trigger_Conversion_Config</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>ADC_Regular_Group_Conversion_Data_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetData
</UL>

<P><STRONG><a name="[208]"></a>ADC_Injected_Group_Autoconversion_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[209]"></a>ADC_Injected_Group_Autoconversion_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>ADC_Injected_Group_External_Trigger_Source_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[20b]"></a>ADC_Injected_Channels_Software_Conversion_Operation</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>ADC_Injected_Sequence_Conversion_Number_Config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>ADC_Injected_Channels_Number_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>ADC_Injected_Channels_Offset_Config</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>ADC_Injected_Group_Conversion_Data_Get</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[210]"></a>ADC_Analog_Watchdog_Mode_Channel_Config</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[211]"></a>ADC_Analog_Watchdog_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[212]"></a>ADC_Analog_Watchdog_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[213]"></a>ADC_Analog_Watchdog_HighThresholds_Config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>ADC_Analog_Watchdog_LowThresholds_Config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>ADC_Temperature_Sensor_And_Vrefint_Channel_Enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>ADC_Temperature_Sensor_And_Vrefint_Channel_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>ADC_INTFlag_Status_Get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>ADC_Flag_Status_Get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetData
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[218]"></a>ADC_INTFlag_Status_Clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>ADC_Flag_Status_Clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetData
</UL>

<P><STRONG><a name="[54]"></a>ADC_Vbat_Monitor_Enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[55]"></a>ADC_Vbat_Monitor_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[56]"></a>ADC_Deep_Power_Mode_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[57]"></a>ADC_Deep_Power_Mode_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5b]"></a>ADC_AHB_Clock_Mode_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5a]"></a>ADC_PLL_Clock_Mode_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5c]"></a>ADC_Calibration_Auto_Load_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5d]"></a>ADC_Calibration_Auto_Load_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5e]"></a>ADC_Differential_Mode_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[5f]"></a>ADC_Differential_Mode_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[60]"></a>ADC_Data_Resolution_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[61]"></a>ADC_Sample_Time_Level_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[53]"></a>ADC_Initializes_Ex</STRONG> (Thumb, 134 bytes, Stack size 4 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Sample_Time_Level_Config
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Data_Resolution_Config
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Differential_Mode_Disable
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Differential_Mode_Enable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration_Auto_Load_Disable
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration_Auto_Load_Enable
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_PLL_Clock_Mode_Config
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AHB_Clock_Mode_Config
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Deep_Power_Mode_Disable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Deep_Power_Mode_Enable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Vbat_Monitor_Disable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Vbat_Monitor_Enable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Interrupts_Disable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Interrupts_Enable
</UL>

<P><STRONG><a name="[219]"></a>ADC_Initializes_StructureEx</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[21a]"></a>ADC_Bypass_Calibration_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[21b]"></a>ADC_Bypass_Calibration_Disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>ADC_Differential_Channels_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>ADC_Clock_Mode_Config</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Clock_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_PLL_Clock_Prescaler_Enable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_PLL_Clock_Disable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_Hclk_Enable
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_Hclk_Config
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_PLL_Clock_Mode_Config
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AHB_Clock_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[21d]"></a>NVIC_Priority_Group_Set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>NVIC_Initializes</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Initializes
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_NVIC_Initialize
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ExtiInit
</UL>

<P><STRONG><a name="[21e]"></a>NVIC_Vector_Table_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>NVIC_System_LowPower_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[220]"></a>NVIC_System_Low_Power_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[221]"></a>SysTick_Clock_Source_Set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[199]"></a>DMA_Reset</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_CH1_Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMA_CH3_Init
</UL>

<P><STRONG><a name="[72]"></a>DMA_Memory_2_Memory_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[71]"></a>DMA_Priority_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[70]"></a>DMA_Circular_Mode_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[6f]"></a>DMA_Memory_Data_Width_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[6e]"></a>DMA_Peripheral_Data_Width_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[6d]"></a>DMA_Memory_Addr_Increment_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[6c]"></a>DMA_Peripheral_Addr_Increment_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[6b]"></a>DMA_Buffer_Size_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[6a]"></a>DMA_Destination_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[69]"></a>DMA_Memory_Address_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>DMA_Peripheral_Address_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[67]"></a>DMA_Initializes</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, n32g430_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Peripheral_Address_Config
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Address_Config
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Destination_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Buffer_Size_Config
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Peripheral_Addr_Increment_Config
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Addr_Increment_Config
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Peripheral_Data_Width_Config
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Data_Width_Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Circular_Mode_Config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Priority_Config
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_2_Memory_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_CH1_Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMA_CH3_Init
</UL>

<P><STRONG><a name="[222]"></a>DMA_Structure_Initializes</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>DMA_Channel_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_CH1_Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMA_CH3_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[13c]"></a>DMA_Channel_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[223]"></a>DMA_Interrupts_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[224]"></a>DMA_Interrupts_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>DMA_Current_Data_Transfer_Number_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[13d]"></a>DMA_Current_Data_Transfer_Number_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[225]"></a>DMA_Flag_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[226]"></a>DMA_Flag_Status_Clear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>DMA_Interrupt_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[228]"></a>DMA_Interrupt_Status_Clear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[19a]"></a>DMA_Channel_Request_Remap</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_CH1_Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMA_CH3_Init
</UL>

<P><STRONG><a name="[15c]"></a>FLASH_Latency_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[229]"></a>FLASH_Latency_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[15b]"></a>FLASH_Prefetch_Buffer_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[22a]"></a>FLASH_Prefetch_Buffer_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[22b]"></a>FLASH_ICache_Reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[22c]"></a>FLASH_ICache_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[22d]"></a>FLASH_ICache_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>FLASH_ICache_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[22f]"></a>FLASH_Cache_LOCK_Start</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>FLASH_Cache_LOCK_Stop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[231]"></a>FLASH_Cache_LOCK_Cancel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>FLASH_Cache_LOCK_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[1b4]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWords
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashEraseSector
</UL>

<P><STRONG><a name="[1b5]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWords
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashEraseSector
</UL>

<P><STRONG><a name="[7b]"></a>Option_Bytes_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User2_RDP2_Program
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write_Protection_Enable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_DATA_Program
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User_RDP1_Program
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_Erase
</UL>

<P><STRONG><a name="[233]"></a>Option_Bytes_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>Option_Bytes_Lock_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>FLASH_Status_Get</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWords
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashEraseSector
</UL>

<P><STRONG><a name="[73]"></a>FLASH_Last_Operation_Wait</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Status_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User2_RDP2_Program
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write_Protection_Enable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_DATA_Program
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User_RDP1_Program
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_Erase
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Word_Program
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Mass_Erase
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_One_Page_Erase
</UL>

<P><STRONG><a name="[76]"></a>FLASH_Flag_Status_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User2_RDP2_Program
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write_Protection_Enable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_DATA_Program
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User_RDP1_Program
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_Erase
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Word_Program
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Mass_Erase
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_One_Page_Erase
</UL>

<P><STRONG><a name="[75]"></a>FLASH_One_Page_Erase</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashEraseSector
</UL>

<P><STRONG><a name="[77]"></a>FLASH_Mass_Erase</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
</UL>

<P><STRONG><a name="[78]"></a>FLASH_Word_Program</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWords
</UL>

<P><STRONG><a name="[7a]"></a>FLASH_Read_Out_Protection_L2_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L1_Enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User2_RDP2_Program
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write_Protection_Enable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_DATA_Program
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_User_RDP1_Program
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Option_Bytes_Erase
</UL>

<P><STRONG><a name="[79]"></a>FLASH_Option_Bytes_Erase</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
</UL>

<P><STRONG><a name="[7c]"></a>FLASH_Option_Bytes_User_RDP1_Program</STRONG> (Thumb, 130 bytes, Stack size 36 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
</UL>

<P><STRONG><a name="[7d]"></a>FLASH_Option_Bytes_DATA_Program</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
</UL>

<P><STRONG><a name="[7e]"></a>FLASH_Write_Protection_Enable</STRONG> (Thumb, 134 bytes, Stack size 20 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
</UL>

<P><STRONG><a name="[7f]"></a>FLASH_Option_Bytes_User2_RDP2_Program</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
</UL>

<P><STRONG><a name="[80]"></a>FLASH_Read_Out_Protection_L1_Enable</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
</UL>

<P><STRONG><a name="[81]"></a>FLASH_Read_Out_Protection_L1_Disable</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
</UL>

<P><STRONG><a name="[83]"></a>FLASH_Read_Out_Protection_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Enable
</UL>

<P><STRONG><a name="[82]"></a>FLASH_Read_Out_Protection_L2_Enable</STRONG> (Thumb, 202 bytes, Stack size 12 bytes, n32g430_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_Status_Get
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read_Out_Protection_L2_Status_Get
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Flag_Status_Clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Last_Operation_Wait
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Option_Bytes_Unlock
</UL>

<P><STRONG><a name="[235]"></a>FLASH_Option_Bytes_User_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>FLASH_Option_Bytes2_User_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>FLASH_Option_Bytes_Data0_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>FLASH_Option_Bytes_Data1_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[239]"></a>FLASH_Option_Bytes_Write_Protection_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>FLASH_Prefetch_Buffer_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>FLASH_Interrupt_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[23c]"></a>FLASH_Interrupt_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>FLASH_Flag_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[23e]"></a>FLASH_Option_Bytes_Flag_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_flash.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>GPIO_Reset</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Reset
</UL>

<P><STRONG><a name="[86]"></a>GPIOA_Pin_Reset</STRONG> (Thumb, 256 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[87]"></a>GPIOB_Pin_Reset</STRONG> (Thumb, 230 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[88]"></a>GPIOC_Pin_Reset</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[89]"></a>GPIOD_Pin_Reset</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[23f]"></a>AFIO_EXTI_Reset</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>GPIO_ALLPin_Reset</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOD_Pin_Reset
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_Pin_Reset
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Pin_Reset
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Pin_Reset
</UL>

<P><STRONG><a name="[8b]"></a>GPIO_Alternate_Set</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Alternate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[8c]"></a>GPIO_Mode_Set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[8d]"></a>GPIO_Pull_Set</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Pull_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[8e]"></a>GPIO_SlewRate_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SlewRate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[8f]"></a>GPIO_Driver_Set</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Driver_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[8a]"></a>GPIO_Peripheral_Initialize</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Driver_Set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SlewRate_Set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pull_Set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Mode_Set
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Alternate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME2_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME3_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ExtiInit
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[90]"></a>GPIO_Alternate_Function_Reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Reset
</UL>

<P><STRONG><a name="[128]"></a>GPIO_Structure_Initialize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME2_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME3_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ExtiInit
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[240]"></a>GPIO_Input_Pin_Data_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[241]"></a>GPIO_Input_Data_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>GPIO_Output_Pin_Data_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[243]"></a>GPIO_Output_Data_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>GPIO_Pins_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AddrInc
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[149]"></a>GPIO_Pins_Reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AddrInc
</UL>

<P><STRONG><a name="[244]"></a>GPIO_PBSC_Pins_Reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[245]"></a>GPIO_PBC_Pins_Reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>GPIO_Pin_Toggle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[248]"></a>GPIO_Pin_Lock_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>GPIO_Pin_Remap_Set</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>GPIO_EXTI_Line_Set</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ExtiInit
</UL>

<P><STRONG><a name="[24a]"></a>AFIO_SPI_NSS_Mode_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[24b]"></a>AFIO_ADC_External_Trigger_Remap_Set</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>AFIO_5V_Tolerance_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>AFIO_5V_Tolerance_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[24e]"></a>AFIO_Filter_Stage_Ctrl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[24f]"></a>AFIO_EFT_Enable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[250]"></a>AFIO_EFT_Disable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[251]"></a>AFIO_Digital_EFT_Enable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[252]"></a>AFIO_Digital_EFT_Disable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>RCC_Reset</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[163]"></a>RCC_HSE_Config</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
</UL>

<P><STRONG><a name="[94]"></a>RCC_Flag_Status_Get</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSI_Stable_Wait
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Stable_Wait
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Stable_Wait
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Stable_Wait
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
</UL>

<P><STRONG><a name="[93]"></a>RCC_Clocks_Frequencies_Value_Get</STRONG> (Thumb, 250 bytes, Stack size 20 bytes, n32g430_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Baud_Rate_Config
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_AudioFrequency_Config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSI_Stable_Wait
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Stable_Wait
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Stable_Wait
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Stable_Wait
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_BSTIM_RCC_Initialize
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfClockInfo
</UL>

<P><STRONG><a name="[92]"></a>RCC_HSE_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = RCC_HSE_Stable_Wait &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
</UL>

<P><STRONG><a name="[16a]"></a>RCC_Clock_Security_System_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[253]"></a>RCC_Clock_Security_System_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>RCC_HSI_Calibration_Value_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>RCC_HSI_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[255]"></a>RCC_HSI_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>RCC_HSI_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = RCC_HSI_Stable_Wait &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[165]"></a>RCC_PLL_Config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, n32g430_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLL_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
</UL>

<P><STRONG><a name="[166]"></a>RCC_PLL_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
</UL>

<P><STRONG><a name="[256]"></a>RCC_PLL_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>RCC_Sysclk_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[161]"></a>RCC_Sysclk_Source_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[15d]"></a>RCC_Hclk_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[15f]"></a>RCC_Pclk1_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_BSTIM_RCC_Initialize
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[15e]"></a>RCC_Pclk2_Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>

<P><STRONG><a name="[257]"></a>RCC_Interrupt_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[258]"></a>RCC_Interrupt_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[259]"></a>RCC_TIM1_8_Clock_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>RCC_ADC_1M_Clock_Config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[66]"></a>RCC_ADC_PLL_Clock_Prescaler_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[64]"></a>RCC_ADC_PLL_Clock_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[65]"></a>RCC_ADC_Hclk_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[63]"></a>RCC_ADC_Hclk_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[25a]"></a>RCC_ADC_Hclk_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>RCC_LSE_Trim_Config</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Config
</UL>

<P><STRONG><a name="[97]"></a>RCC_APB1_Peripheral_Clock_Enable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LPTIM_Clock_Config
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Config
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_BSTIM_RCC_Initialize
</UL>

<P><STRONG><a name="[96]"></a>RCC_LSE_Config</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Clock_Enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Trim_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
</UL>

<P><STRONG><a name="[25b]"></a>RCC_LSE_Clock_Security_System_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>RCC_LSE_Clock_Security_System_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[25d]"></a>RCC_LSE_Clock_Security_System_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>RCC_LSE_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[1a1]"></a>RCC_LSI_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
</UL>

<P><STRONG><a name="[19f]"></a>RCC_LSI_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
</UL>

<P><STRONG><a name="[9a]"></a>RCC_LSI_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[1a0]"></a>RCC_RTC_Clock_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
</UL>

<P><STRONG><a name="[1a2]"></a>RCC_RTC_Clock_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
</UL>

<P><STRONG><a name="[19e]"></a>RCC_RTC_Clock_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
</UL>

<P><STRONG><a name="[9b]"></a>RCC_LPTIM_Clock_Config</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Clock_Enable
</UL>

<P><STRONG><a name="[25e]"></a>RCC_LPTIM_Reset</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>RCC_LPTIM_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>RCC_LPTIM_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>RCC_AHB_Peripheral_Clock_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[261]"></a>RCC_AHB_Peripheral_Clock_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[142]"></a>RCC_APB2_Peripheral_Clock_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_BSTIM_RCC_Initialize
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[262]"></a>RCC_APB2_Peripheral_Clock_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[263]"></a>RCC_APB1_Peripheral_Clock_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>RCC_AHB_Peripheral_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Reset
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Reset
</UL>

<P><STRONG><a name="[91]"></a>RCC_APB2_Peripheral_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Reset
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_Reset
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Alternate_Function_Reset
</UL>

<P><STRONG><a name="[b0]"></a>RCC_APB1_Peripheral_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Reset
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_Reset
</UL>

<P><STRONG><a name="[19d]"></a>RCC_Backup_Reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
</UL>

<P><STRONG><a name="[264]"></a>RCC_MCO_PLL_Prescaler_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[265]"></a>RCC_MCO_Source_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>RCC_Reset_Flag_Clear</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>RCC_Interrupt_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[268]"></a>RCC_Interrupt_Status_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>SPI_I2S_Reset</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, n32g430_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[146]"></a>SPI_ON</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[269]"></a>SPI_OFF</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>SPI_Initializes_Structure</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[a6]"></a>SPI_CRC_Polynomial_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
</UL>

<P><STRONG><a name="[a5]"></a>SPI_FirstBit_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
</UL>

<P><STRONG><a name="[a4]"></a>SPI_BaudRatePres_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
</UL>

<P><STRONG><a name="[a3]"></a>SPI_NSS_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
</UL>

<P><STRONG><a name="[a2]"></a>SPI_CLKPOL_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
</UL>

<P><STRONG><a name="[a1]"></a>SPI_CLKPHA_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
</UL>

<P><STRONG><a name="[a0]"></a>SPI_DataLen_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
</UL>

<P><STRONG><a name="[9f]"></a>SPI_SpiMode_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
</UL>

<P><STRONG><a name="[9e]"></a>SPI_DataDirection_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
</UL>

<P><STRONG><a name="[9d]"></a>SPI_Initializes</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, n32g430_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataDirection_Config
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SpiMode_Config
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DataLen_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CLKPHA_Config
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CLKPOL_Config
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_NSS_Config
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_BaudRatePres_Config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FirstBit_Config
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CRC_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[144]"></a>SPI_Set_Nss_Level</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[26a]"></a>SPI_SS_Output_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[26b]"></a>SPI_SS_Output_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[26c]"></a>SPI_Next_Transmit_CRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>SPI_CRC_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[26d]"></a>SPI_CRC_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[26e]"></a>SPI_CRC_Data_Get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>SPI_CRC_Polynomial_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[270]"></a>SPI_I2S_Mode_Select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[271]"></a>I2S_ON</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[272]"></a>I2S_OFF</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[273]"></a>I2S_Initializes_Structure</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>I2S_CLKPOL_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Initializes
</UL>

<P><STRONG><a name="[a7]"></a>I2S_AudioFrequency_Config</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, n32g430_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Initializes
</UL>

<P><STRONG><a name="[ad]"></a>I2S_MCLK_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Initializes
</UL>

<P><STRONG><a name="[ac]"></a>I2S_MCLK_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Initializes
</UL>

<P><STRONG><a name="[ab]"></a>I2S_DataFormat_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Initializes
</UL>

<P><STRONG><a name="[aa]"></a>I2S_Standard_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Initializes
</UL>

<P><STRONG><a name="[a9]"></a>I2S_Mode_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Initializes
</UL>

<P><STRONG><a name="[a8]"></a>I2S_Initializes</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, n32g430_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Mode_Config
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Standard_Config
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_DataFormat_Config
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_MCLK_Enable
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_MCLK_Disable
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_AudioFrequency_Config
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_CLKPOL_Config
</UL>

<P><STRONG><a name="[274]"></a>SPI_I2S_Interrupts_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[275]"></a>SPI_I2S_Interrupts_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[276]"></a>SPI_I2S_DMA_Transfer_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[277]"></a>SPI_I2S_DMA_Transfer_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>SPI_I2S_Data_Transmit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AddrInc
</UL>

<P><STRONG><a name="[278]"></a>SPI_I2S_Data_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>SPI_I2S_Flag_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AddrInc
</UL>

<P><STRONG><a name="[279]"></a>SPI_I2S_Interrupt_Flag_Status_Get</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[27a]"></a>SPI_I2S_Clear_Flag_Status</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, n32g430_spi.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>USART_Reset</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Reset
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Reset
</UL>

<P><STRONG><a name="[b7]"></a>USART_Hardware_Flow_Control_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[b6]"></a>USART_Mode_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[b5]"></a>USART_Parity_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[b4]"></a>USART_Stop_Bits_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[b3]"></a>USART_Word_Length_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[b1]"></a>USART_Baud_Rate_Config</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, n32g430_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[b2]"></a>USART_Initializes</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, n32g430_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Baud_Rate_Config
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Word_Length_Config
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Stop_Bits_Config
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Parity_Config
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Mode_Config
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Hardware_Flow_Control_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
</UL>

<P><STRONG><a name="[27b]"></a>USART_Structure_Initializes</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>USART_Last_Bit_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[bb]"></a>USART_Phase_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[ba]"></a>USART_Polarity_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[b9]"></a>USART_Clock_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[b8]"></a>USART_Clock_Initializes</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Config
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Polarity_Config
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Phase_Config
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Last_Bit_Config
</UL>

<P><STRONG><a name="[27c]"></a>USART_Clock_Structure_Initializes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>USART_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
</UL>

<P><STRONG><a name="[27d]"></a>USART_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>USART_Interrput_Enable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, n32g430_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_Interrput_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
</UL>

<P><STRONG><a name="[27e]"></a>USART_Interrput_Disable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>USART_DMA_Transfer_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
</UL>

<P><STRONG><a name="[27f]"></a>USART_DMA_Transfer_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[280]"></a>USART_Address_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[281]"></a>USART_WakeUp_Mode_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[282]"></a>USART_Receiver_Wakeup_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[283]"></a>USART_Receiver_Wakeup_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[284]"></a>USART_LIN_Break_Detect_Length_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[285]"></a>USART_LIN_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[286]"></a>USART_LIN_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>USART_Data_Send</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartOutChar
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartOutStr
</UL>

<P><STRONG><a name="[287]"></a>USART_Data_Receive</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[288]"></a>USART_Break_Frame_Send</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[289]"></a>USART_Guard_Time_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[28a]"></a>USART_Prescaler_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[28b]"></a>USART_Smart_Card_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[28c]"></a>USART_Smart_Card_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[28d]"></a>USART_Smart_Card_NACK_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[28e]"></a>USART_Smart_Card_NACK_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>USART_Half_Duplex_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[290]"></a>USART_Half_Duplex_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[291]"></a>USART_IrDA_Mode_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[292]"></a>USART_IrDA_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>USART_IrDA_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>USART_Flag_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartOutChar
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartOutStr
</UL>

<P><STRONG><a name="[294]"></a>USART_Flag_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>USART_Interrupt_Status_Get</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, n32g430_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USART_Interrupt_Status_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[295]"></a>USART_Interrupt_Status_Clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>TIM_Reset</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Reset
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Reset
</UL>

<P><STRONG><a name="[bf]"></a>TIM_Base_Count_Mode_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[296]"></a>TIM_Base_Center_Aligned_Mode_OC4_7_8_9_Trigger_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[297]"></a>TIM_Asymmetric_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[298]"></a>TIM_Asymmetric_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>TIM_Base_Auto_Reload_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[c2]"></a>TIM_Base_Prescaler_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[c4]"></a>TIM_Base_Reload_Mode_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME6_Init
</UL>

<P><STRONG><a name="[c3]"></a>TIM_Base_Repeat_Count_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[c5]"></a>TIM_Base_Channel1</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[c7]"></a>TIM_Base_Channel2</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[c8]"></a>TIM_Base_Channel3</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[c9]"></a>TIM_Base_Channel4</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[c6]"></a>TIM_Base_OCrefClear</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[c0]"></a>TIM_Clock_Division_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[be]"></a>TIM_Base_Initialize</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_Base_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Clock_Division_Set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_OCrefClear
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Channel4
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Channel3
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Channel2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Channel1
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Repeat_Count_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Reload_Mode_Set
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Prescaler_Set
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Auto_Reload_Set
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Count_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_Base_Initialize
</UL>

<P><STRONG><a name="[191]"></a>TIM_Base_Struct_Initialize</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_Base_Initialize
</UL>

<P><STRONG><a name="[299]"></a>TIM_Base_Count_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[29a]"></a>TIM_Base_Count_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[29b]"></a>TIM_Auto_Reload_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[29c]"></a>TIM_Base_Prescaler_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>TIM_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME2_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME3_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME6_Init
</UL>

<P><STRONG><a name="[29d]"></a>TIM_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[29e]"></a>TIM_Output_Channel1_Preload_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[29f]"></a>TIM_Output_Channel2_Preload_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a0]"></a>TIM_Output_Channel3_Preload_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a1]"></a>TIM_Output_Channel4_Preload_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a2]"></a>TIM_Output_Channel5_Preload_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a3]"></a>TIM_Output_Channel6_Preload_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a4]"></a>TIM_Output_Channel7_Preload_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a5]"></a>TIM_Output_Channel8_Preload_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a6]"></a>TIM_Output_Channel9_Preload_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a7]"></a>TIM_Auto_Reload_Preload_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a8]"></a>TIM_Auto_Reload_Preload_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a9]"></a>TIM_Update_Event_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2aa]"></a>TIM_Update_Event_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ab]"></a>TIM_Update_Request_Source_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ac]"></a>TIM_Event_Generate</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ad]"></a>TIM_Commutation_Event_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ae]"></a>TIM_Commutation_Event_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2af]"></a>TIM_Capture_Compare_Control_Preload_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b0]"></a>TIM_Capture_Compare_Control_Preload_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b1]"></a>TIM_Compare1_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b2]"></a>TIM_Compare2_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b3]"></a>TIM_Compare3_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b4]"></a>TIM_Compare4_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b5]"></a>TIM_Compare5_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b6]"></a>TIM_Compare6_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b7]"></a>TIM_Compare7_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b8]"></a>TIM_Compare8_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2b9]"></a>TIM_Compare9_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ba]"></a>TIM_Compare1_D_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2bb]"></a>TIM_Compare2_D_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2bc]"></a>TIM_Compare3_D_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2bd]"></a>TIM_Compare4_D_Set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2be]"></a>TIM_Compare_Capture1_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2bf]"></a>TIM_Compare_Capture2_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c0]"></a>TIM_Compare_Capture3_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c1]"></a>TIM_Compare_Capture4_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c2]"></a>TIM_Compare_Capture5_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c3]"></a>TIM_Compare_Capture6_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c4]"></a>TIM_Compare_Capture7_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c5]"></a>TIM_Compare_Capture8_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c6]"></a>TIM_Compare_Capture9_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c7]"></a>TIM_Compare_Capture1_D_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c8]"></a>TIM_Compare_Capture2_D_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c9]"></a>TIM_Compare_Capture3_D_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ca]"></a>TIM_Compare_Capture4_D_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>TIM_Trigger_Source_Select</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_As_External_Clock
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Internal_Trig_To_Ext_Set
</UL>

<P><STRONG><a name="[ce]"></a>Input_Channel1_Config</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_As_External_Clock
</UL>

<P><STRONG><a name="[cd]"></a>Input_Channel2_Config</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_As_External_Clock
</UL>

<P><STRONG><a name="[d7]"></a>Input_Channel3_Config</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[d9]"></a>Input_Channel4_Config</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[d0]"></a>TIM_External_Trigger_Filter_Set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode2_Set
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode1_Set
</UL>

<P><STRONG><a name="[d2]"></a>TIM_External_Trigger_Prescaler_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode2_Set
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode1_Set
</UL>

<P><STRONG><a name="[d1]"></a>TIM_External_Trigger_Polarity_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode2_Set
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode1_Set
</UL>

<P><STRONG><a name="[2cb]"></a>TIM_Internal_Clock_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>TIM_Input_Capture1_Prescaler_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[d6]"></a>TIM_Input_Capture2_Prescaler_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[d8]"></a>TIM_Input_Capture3_Prescaler_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[da]"></a>TIM_Input_Capture4_Prescaler_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[ca]"></a>TIM_Internal_Trig_To_Ext_Set</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_Source_Select
</UL>

<P><STRONG><a name="[cc]"></a>TIM_Trigger_As_External_Clock</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel2_Config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel1_Config
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_Source_Select
</UL>

<P><STRONG><a name="[cf]"></a>TIM_External_Clock_Mode1_Set</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Polarity_Set
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Prescaler_Set
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Filter_Set
</UL>

<P><STRONG><a name="[d3]"></a>TIM_External_Clock_Mode2_Set</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Polarity_Set
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Prescaler_Set
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Filter_Set
</UL>

<P><STRONG><a name="[2cc]"></a>TIM_Slave_Mode_Select</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2cd]"></a>TIM_Master_Slave_Mode_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ce]"></a>TIM_Output_Trigger_Select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2cf]"></a>TIM_OC4REF_Trigger_To_ADC_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2d0]"></a>TIM_OC4REF_Trigger_To_ADC_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2d1]"></a>TIM_OC7REF_Trigger_To_ADC_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2d2]"></a>TIM_OC7REF_Trigger_To_ADC_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2d3]"></a>TIM_OC8REF_Trigger_To_ADC_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2d4]"></a>TIM_OC8REF_Trigger_To_ADC_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2d5]"></a>TIM_OC9REF_Trigger_To_ADC_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2d6]"></a>TIM_OC9REF_Trigger_To_ADC_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2d7]"></a>TIM_One_Pulse_Mode_Select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[196]"></a>TIM_Input_Struct_Initialize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME2_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME3_Init
</UL>

<P><STRONG><a name="[d4]"></a>TIM_Input_Channel_Initialize</STRONG> (Thumb, 136 bytes, Stack size 12 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture4_Prescaler_Set
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture3_Prescaler_Set
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture2_Prescaler_Set
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture1_Prescaler_Set
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel4_Config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel3_Config
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel2_Config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME2_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME3_Init
</UL>

<P><STRONG><a name="[db]"></a>TIM_PWM_Input_Channel_Config</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture2_Prescaler_Set
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture1_Prescaler_Set
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel2_Config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel1_Config
</UL>

<P><STRONG><a name="[de]"></a>TIM_Output_Channel_Polarity_Set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel6_Initialize
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel5_Initialize
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[e0]"></a>TIM_Output_Channel_N_Polarity_Set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[df]"></a>TIM_Capture_Compare_Ch_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel6_Initialize
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel5_Initialize
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[dd]"></a>TIM_Capture_Compare_Ch_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel6_Initialize
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel5_Initialize
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[e1]"></a>TIM_Capture_Compare_Ch_N_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[e2]"></a>TIM_Capture_Compare_Ch_N_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[2d8]"></a>TIM_CCEN_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2d9]"></a>TIM_Output_Channel_Mode_Set</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2da]"></a>TIM_Forced_Output_Channel1_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2db]"></a>TIM_Forced_Output_Channel2_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2dc]"></a>TIM_Forced_Output_Channel3_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2dd]"></a>TIM_Forced_Output_Channel4_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2de]"></a>TIM_Forced_Output_Channel5_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2df]"></a>TIM_Forced_Output_Channel6_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e0]"></a>TIM_Output_Channel1_Fast_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e1]"></a>TIM_Output_Channel2_Fast_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e2]"></a>TIM_Output_Channel3_Fast_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e3]"></a>TIM_Output_Channel4_Fast_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e4]"></a>TIM_Output_Channel5_Fast_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e5]"></a>TIM_Output_Channel6_Fast_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e6]"></a>TIM_Output_Channel1_Reference_Clear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e7]"></a>TIM_Output_Channel2_Reference_Clear</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e8]"></a>TIM_Output_Channel3_Reference_Clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e9]"></a>TIM_Output_Channel4_Reference_Clear</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ea]"></a>TIM_Output_Channel5_Reference_Clear</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2eb]"></a>TIM_Output_Channel6_Reference_Clear</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>TIM_Output_Channel1_Initialize</STRONG> (Thumb, 140 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[e3]"></a>TIM_Output_Channel2_Initialize</STRONG> (Thumb, 152 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[e4]"></a>TIM_Output_Channel3_Initialize</STRONG> (Thumb, 146 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[e5]"></a>TIM_Output_Channel4_Initialize</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[e6]"></a>TIM_Output_Channel5_Initialize</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[e7]"></a>TIM_Output_Channel6_Initialize</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[2ec]"></a>TIM_PWM_Output_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ed]"></a>TIM_PWM_Output_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ee]"></a>TIM_Output_Channel_Struct_Initialize</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>TIM_Lock_Up_Break_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[eb]"></a>TIM_Lock_Up_Break_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[ec]"></a>TIM_Pvd_Break_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[ed]"></a>TIM_Pvd_Break_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[e9]"></a>TIM_IOM_Comp_Break</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[e8]"></a>TIM_Break_And_Dead_Time_Set</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_IOM_Comp_Break
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Pvd_Break_Disable
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Pvd_Break_Enable
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Lock_Up_Break_Disable
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Lock_Up_Break_Enable
</UL>

<P><STRONG><a name="[2ef]"></a>TIM_Break_And_Dead_Time_Struct_Initialize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[192]"></a>TIM_Interrupt_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME2_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME3_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME6_Init
</UL>

<P><STRONG><a name="[2f0]"></a>TIM_Interrupt_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>TIM_Interrupt_Status_Get</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Interrupt_Status_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[13a]"></a>TIM_Interrupt_Status_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[2f1]"></a>TIM_Flag_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f2]"></a>TIM_Flag_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f3]"></a>TIM_Dma_Config</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f4]"></a>TIM_Dma_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f5]"></a>TIM_Dma_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f6]"></a>TIM_Hall_Sensor_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f7]"></a>TIM_Hall_Sensor_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f8]"></a>TIM_Encoder_Interface_Set</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f9]"></a>TIM_Channel1_Filter_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fa]"></a>TIM_Channel2_Filter_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fb]"></a>TIM_Channel3_Filter_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fc]"></a>TIM_Channel4_Filter_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fd]"></a>TIM_Break_Filter_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fe]"></a>TIM_Channel1_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ff]"></a>TIM_Channel1_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[300]"></a>TIM_Channel2_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[301]"></a>TIM_Channel2_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[302]"></a>TIM_Channel3_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[303]"></a>TIM_Channel3_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[304]"></a>TIM_Channel4_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[305]"></a>TIM_Channel4_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[306]"></a>TIM_Break_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[307]"></a>TIM_Break_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[308]"></a>EXTI_Reset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>EXTI_LineCmd_Disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, n32g430_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Peripheral_Initializes
</UL>

<P><STRONG><a name="[f0]"></a>EXTI_Trigger_Config</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, n32g430_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Peripheral_Initializes
</UL>

<P><STRONG><a name="[ef]"></a>EXTI_Work_Mode_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, n32g430_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Peripheral_Initializes
</UL>

<P><STRONG><a name="[ee]"></a>EXTI_Peripheral_Initializes</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, n32g430_exti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Work_Mode_Config
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Trigger_Config
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_LineCmd_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ExtiInit
</UL>

<P><STRONG><a name="[309]"></a>EXTI_Structure_Initializes</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[30a]"></a>EXTI_Software_Interrupt_Trigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[30b]"></a>EXTI_Flag_Status_Get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[30c]"></a>EXTI_Flag_Status_Clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[30d]"></a>EXTI_Interrupt_Status_Get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[30e]"></a>EXTI_Interrupt_Status_Clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[30f]"></a>EXTI_RTC_Time_Stamp_Select</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[310]"></a>RTC_Structure_Initializes</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>RTC_Write_Protection_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Interrupts_Disable
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Interrupts_Enable
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Synchronization_Shift_Config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeStamp_Disable
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeStamp_Enable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Smooth_Calibration_Config
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calibration_Output_Config
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calibration_Output_Disable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calibration_Output_Enable
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Output_Config
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Day_Light_Saving_Config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeUp_Disable
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeUp_Enable
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeUp_Counter_Set
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeUp_Clock_Select
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_SubSecond_Config
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_Disable
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_Enable
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_Set
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calendar_Initializes
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bypass_Shadow_Disable
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bypass_Shadow_Enable
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Reference_Clock_Disable
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Reference_Clock_Enable
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Deinitializes
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Wait_For_Synchronization
</UL>

<P><STRONG><a name="[f3]"></a>RTC_Write_Protection_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Interrupts_Disable
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Interrupts_Enable
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Synchronization_Shift_Config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeStamp_Disable
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeStamp_Enable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Smooth_Calibration_Config
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calibration_Output_Config
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calibration_Output_Disable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calibration_Output_Enable
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Output_Config
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Day_Light_Saving_Config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeUp_Disable
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeUp_Enable
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeUp_Counter_Set
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeUp_Clock_Select
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_SubSecond_Config
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_Disable
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_Enable
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_Set
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calendar_Initializes
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bypass_Shadow_Disable
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bypass_Shadow_Enable
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Reference_Clock_Disable
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Reference_Clock_Enable
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Deinitializes
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Wait_For_Synchronization
</UL>

<P><STRONG><a name="[f6]"></a>RTC_Initialization_Mode_Enter</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calendar_Initializes
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Reference_Clock_Disable
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Reference_Clock_Enable
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Deinitializes
</UL>

<P><STRONG><a name="[f9]"></a>RTC_Initialization_Mode_Exit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calendar_Initializes
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Reference_Clock_Disable
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Reference_Clock_Enable
</UL>

<P><STRONG><a name="[f2]"></a>RTC_Wait_For_Synchronization</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Synchronization_Shift_Config
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calendar_Initializes
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Deinitializes
</UL>

<P><STRONG><a name="[f5]"></a>RTC_Deinitializes</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Wait_For_Synchronization
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Initialization_Mode_Enter
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Registers_Reset
</UL>

<P><STRONG><a name="[f8]"></a>RTC_Reference_Clock_Enable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Initialization_Mode_Exit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Initialization_Mode_Enter
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[fa]"></a>RTC_Reference_Clock_Disable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Initialization_Mode_Exit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Initialization_Mode_Enter
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[fb]"></a>RTC_Bypass_Shadow_Enable</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[fc]"></a>RTC_Bypass_Shadow_Disable</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[311]"></a>RTC_Time_Struct_Initializes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>RTC_Time_Get</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2_To_Byte
</UL>

<P><STRONG><a name="[312]"></a>RTC_SubSecond_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>RTC_Calendar_Initializes</STRONG> (Thumb, 422 bytes, Stack size 40 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Wait_For_Synchronization
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Initialization_Mode_Exit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Initialization_Mode_Enter
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Byte_To_Bcd2
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Prescale_Config
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Hour_Format_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Time_Init
</UL>

<P><STRONG><a name="[313]"></a>RTC_Date_Struct_Initializes</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>RTC_Date_Get</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2_To_Byte
</UL>

<P><STRONG><a name="[104]"></a>RTC_Alarm_Set</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Byte_To_Bcd2
</UL>

<P><STRONG><a name="[314]"></a>RTC_Alarm_Struct_Initializes</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>RTC_Alarm_Get</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2_To_Byte
</UL>

<P><STRONG><a name="[106]"></a>RTC_Alarm_Enable</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[107]"></a>RTC_Alarm_Disable</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[108]"></a>RTC_Alarm_SubSecond_Config</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[315]"></a>RTC_Alarm_SubSecond_Get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>RTC_WakeUp_Clock_Select</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[10a]"></a>RTC_WakeUp_Counter_Set</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[316]"></a>RTC_WakeUp_Counter_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>RTC_WakeUp_Enable</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[10c]"></a>RTC_WakeUp_Disable</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[10d]"></a>RTC_Day_Light_Saving_Config</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[317]"></a>RTC_Store_Operation_Get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>RTC_Output_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[10f]"></a>RTC_Calibration_Output_Enable</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[110]"></a>RTC_Calibration_Output_Disable</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[111]"></a>RTC_Calibration_Output_Config</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[112]"></a>RTC_Smooth_Calibration_Config</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[113]"></a>RTC_TimeStamp_Enable</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[114]"></a>RTC_TimeStamp_Disable</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[115]"></a>RTC_TimeStamp_Get</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2_To_Byte
</UL>

<P><STRONG><a name="[318]"></a>RTC_TimeStamp_SubSecond_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[319]"></a>RTC_Output_Mode_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>RTC_Synchronization_Shift_Config</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Wait_For_Synchronization
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[117]"></a>RTC_Interrupts_Enable</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[118]"></a>RTC_Interrupts_Disable</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Disable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Protection_Enable
</UL>

<P><STRONG><a name="[31a]"></a>RTC_Flag_Status_Get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[31b]"></a>RTC_Flag_Clear</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[31c]"></a>RTC_Interrupt_Status_Get</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[31d]"></a>RTC_Interrupt_Status_Clear</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[31e]"></a>RTC_Tamper_Trigger_Config</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[31f]"></a>RTC_Tamper_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[320]"></a>RTC_Tamper_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[321]"></a>RTC_Tamper_Filter_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[322]"></a>RTC_Tamper_Sampling_Frequency_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[323]"></a>RTC_Tamper_Pins_Precharge_Duration</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[324]"></a>RTC_TimeStamp_On_Tamper_Detection_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[325]"></a>RTC_TimeStamp_On_Tamper_Detection_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[326]"></a>RTC_Tamper_Precharge_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[327]"></a>RTC_Tamper_Precharge_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[328]"></a>RTC_Tamper_Interrput_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[329]"></a>RTC_Tamper_Interrput_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[32a]"></a>RTC_Tamper_Backup_Register_Clear_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[32b]"></a>RTC_Tamper_Backup_Register_Clear_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[32c]"></a>RTC_Backup_Register_Write</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[32d]"></a>RTC_Backup_Register_Read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>PWR_Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, n32g430_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Reset
</UL>

<P><STRONG><a name="[19c]"></a>PWR_RTC_Backup_Access_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
</UL>

<P><STRONG><a name="[32e]"></a>PWR_RTC_Backup_Access_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[32f]"></a>PWR_PVD_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[330]"></a>PWR_PVD_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[331]"></a>PWR_PVD_Level_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[332]"></a>PWR_Wakeup_Pin_Enable</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[333]"></a>PWR_Wakeup_Pin_Disable</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[334]"></a>PWR_RTC_Wakeup_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[335]"></a>PWR_RTC_Wakeup_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[336]"></a>PWR_SLEEP_Mode_Enter</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[337]"></a>PWR_STOP0_Mode_Enter</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[338]"></a>PWR_STOP2_Mode_Enter</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[339]"></a>PWR_STANDBY_Mode_Enter</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[33a]"></a>PWR_Flag_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[33b]"></a>PWR_Flag_Status_Clear</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, n32g430_pwr.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>main</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = main &rArr; UserSystemInit &rArr; Usart1_Init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Receive_Deal
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_5ms
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_50ms
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_500ms
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_1s
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_150ms
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_10ms
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Voltage_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[125]"></a>ADC_Init</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ADC_Init &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_1M_Clock_Config
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Flag_Status_Get
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Channels_Software_Conversion_Operation
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration_Operation
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ON
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Structure
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[133]"></a>bubble_sort</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bubble_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetData
</UL>

<P><STRONG><a name="[12e]"></a>ADC_GetData</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_GetData &rArr; bubble_sort
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Flag_Status_Clear
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Flag_Status_Get
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Group_Conversion_Data_Get
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Sequence_Conversion_Number_Config
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Sample_Time_Config
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Channels_Software_Conversion_Operation
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bubble_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_get
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Voltage_get
</UL>

<P><STRONG><a name="[134]"></a>Speed_get</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Speed_get &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetData
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_50ms
</UL>

<P><STRONG><a name="[11d]"></a>Battery_Voltage_get</STRONG> (Thumb, 814 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Battery_Voltage_get &rArr; ADC_GetData &rArr; bubble_sort
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetData
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_1s
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33c]"></a>FindAdcTemp</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, adc.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM6_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, n32g430_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM6_IRQHandler &rArr; TIM_Interrupt_Status_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Clear
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USART1_IRQHandler</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, n32g430_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USART1_IRQHandler &rArr; BufferManageWrite &rArr; PutData &rArr; rbWrite &rArr;  rbWrite (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Interrupt_Status_Get
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Current_Data_Transfer_Number_Get
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Current_Data_Transfer_Number_Set
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Disable
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Enable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Address_Config
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferManageWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM4_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, n32g430_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM4_IRQHandler &rArr; TIM_Interrupt_Status_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Clear
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[141]"></a>SPI2_Init</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SPI2_Init &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CRC_Enable
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Set_Nss_Level
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Initializes_Structure
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ON
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_Reset
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[148]"></a>Send_AddrInc</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Send_AddrInc
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_Flag_Status_Get
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_Data_Transmit
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Reset
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_5ms
</UL>

<P><STRONG><a name="[14d]"></a>One_LED_num_Switch</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = One_LED_num_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_LED_Switch
</UL>

<P><STRONG><a name="[14c]"></a>All_LED_Switch</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = All_LED_Switch &rArr; One_LED_num_Switch
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;One_LED_num_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_5ms
</UL>

<P><STRONG><a name="[14f]"></a>Current_location</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_guide_to_All_LED_num
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_onewire_to_All_LED_num
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_CarLed_to_All_LED_num
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_border_to_All_LED_num
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_battery_to_All_LED_num
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Trip_to_All_LED_num
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Speed_to_All_LED_num
</UL>

<P><STRONG><a name="[175]"></a>Clean_All_LED_num</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_5ms
</UL>

<P><STRONG><a name="[176]"></a>Clean_show_LED_num</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_5ms
</UL>

<P><STRONG><a name="[14e]"></a>Transfer_Speed_to_All_LED_num</STRONG> (Thumb, 974 bytes, Stack size 20 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Transfer_Speed_to_All_LED_num
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Current_location
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_150ms
</UL>

<P><STRONG><a name="[150]"></a>Transfer_Trip_to_All_LED_num</STRONG> (Thumb, 1318 bytes, Stack size 32 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Transfer_Trip_to_All_LED_num
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Current_location
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_150ms
</UL>

<P><STRONG><a name="[151]"></a>Transfer_battery_to_All_LED_num</STRONG> (Thumb, 260 bytes, Stack size 12 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Transfer_battery_to_All_LED_num
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Current_location
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_150ms
</UL>

<P><STRONG><a name="[152]"></a>Transfer_border_to_All_LED_num</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Transfer_border_to_All_LED_num
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Current_location
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_150ms
</UL>

<P><STRONG><a name="[153]"></a>Transfer_CarLed_to_All_LED_num</STRONG> (Thumb, 274 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Transfer_CarLed_to_All_LED_num
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Current_location
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_150ms
</UL>

<P><STRONG><a name="[154]"></a>Transfer_onewire_to_All_LED_num</STRONG> (Thumb, 546 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Transfer_onewire_to_All_LED_num
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Current_location
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_150ms
</UL>

<P><STRONG><a name="[155]"></a>Transfer_guide_to_All_LED_num</STRONG> (Thumb, 1384 bytes, Stack size 28 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Transfer_guide_to_All_LED_num
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Current_location
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Screen
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_150ms
</UL>

<P><STRONG><a name="[158]"></a>SetSysClockToHSI</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk2_Config
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk1_Config
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Hclk_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysclk_Source_Get
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysclk_Config
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Stable_Wait
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Enable
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Reset
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Prefetch_Buffer_Enable
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Latency_Set
</UL>

<P><STRONG><a name="[162]"></a>SetSysClockToHSE</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, system_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk2_Config
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk1_Config
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Hclk_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysclk_Source_Get
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysclk_Config
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Stable_Wait
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Config
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Reset
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Prefetch_Buffer_Enable
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Latency_Set
</UL>

<P><STRONG><a name="[164]"></a>SetSysClockToPLL</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SetSysClockToPLL &rArr; RCC_HSI_Stable_Wait &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk2_Config
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk1_Config
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Hclk_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysclk_Source_Get
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysclk_Config
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Enable
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Config
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Stable_Wait
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Enable
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Stable_Wait
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Config
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Reset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Latency_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RccInit
</UL>

<P><STRONG><a name="[167]"></a>RccInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = RccInit &rArr; SetSysClockToPLL &rArr; RCC_HSI_Stable_Wait &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToPLL
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[11c]"></a>delay_ms</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = delay_ms &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[168]"></a>delay_us</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, system_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[169]"></a>RCC_Configuration</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk2_Config
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clock_Security_System_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[16b]"></a>GPIO_Configuration</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[16c]"></a>GPIO_ExtiInit</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, system_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTI_Line_Set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Initializes
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Peripheral_Initializes
</UL>

<P><STRONG><a name="[16f]"></a>NVIC_Configuration</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Configuration &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[170]"></a>Sector_select_init</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, system_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_set_count
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_get_count
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kilo_storage
</UL>

<P><STRONG><a name="[177]"></a>Polling_Car_Status</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_5ms
</UL>

<P><STRONG><a name="[11f]"></a>Pro_5ms</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Pro_5ms &rArr; All_LED_Switch &rArr; One_LED_num_Switch
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polling_Car_Status
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_show_LED_num
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_All_LED_num
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_LED_Switch
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AddrInc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[120]"></a>Pro_10ms</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[121]"></a>Pro_50ms</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Pro_50ms &rArr; Speed_get &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[178]"></a>Border_detect</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pro_150ms
</UL>

<P><STRONG><a name="[122]"></a>Pro_150ms</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Pro_150ms &rArr; Transfer_Trip_to_All_LED_num
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Border_detect
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_guide_to_All_LED_num
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_onewire_to_All_LED_num
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_CarLed_to_All_LED_num
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_border_to_All_LED_num
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_battery_to_All_LED_num
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Trip_to_All_LED_num
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Speed_to_All_LED_num
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[123]"></a>Pro_500ms</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, system_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[124]"></a>Pro_1s</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Pro_1s &rArr; Battery_Voltage_get &rArr; ADC_GetData &rArr; bubble_sort
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Voltage_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11b]"></a>Start_Screen</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Start_Screen &rArr; Transfer_Trip_to_All_LED_num
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_guide_to_All_LED_num
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_onewire_to_All_LED_num
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_CarLed_to_All_LED_num
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_border_to_All_LED_num
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_battery_to_All_LED_num
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Trip_to_All_LED_num
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transfer_Speed_to_All_LED_num
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_show_LED_num
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_All_LED_num
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_LED_Switch
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AddrInc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[179]"></a>Kilo_storage</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, system_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_set_count
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_get_count
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_GetFlashSector
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperEraseSectorEx
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_select_init
</UL>

<P><STRONG><a name="[11a]"></a>UserSystemInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = UserSystemInit &rArr; Usart1_Init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMA_CH3_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME6_Init
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfClockInfo
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RccInit
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18b]"></a>Ymodem_Protocol_Crc16</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Ymodem_Protocol_Crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Receive_Deal
</UL>

<P><STRONG><a name="[17d]"></a>Usart1_Init</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Usart1_Init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Transfer_Enable
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Interrput_Enable
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Initializes
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferManageCreate
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[185]"></a>UsartOutStr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Data_Send
</UL>

<P><STRONG><a name="[188]"></a>UsartOutChar</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Data_Send
</UL>

<P><STRONG><a name="[18c]"></a>Guide_Data_Deal</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Receive_Deal
</UL>

<P><STRONG><a name="[11e]"></a>Usart1_Receive_Deal</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Usart1_Receive_Deal &rArr; BufferManageRead &rArr; rbRead &rArr;  rbRead (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferManageRead
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Guide_Data_Deal
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Protocol_Crc16
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33d]"></a>Buffercmp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usart.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>fputc</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Data_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[17f]"></a>PrintfClockInfo</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PrintfClockInfo &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[18e]"></a>Common_BSTIM_RCC_Initialize</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Common_BSTIM_RCC_Initialize &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Clock_Enable
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk1_Config
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME2_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME3_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME6_Init
</UL>

<P><STRONG><a name="[18f]"></a>Common_TIM_NVIC_Initialize</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Common_TIM_NVIC_Initialize &rArr; NVIC_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Initializes
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME2_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME3_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME6_Init
</UL>

<P><STRONG><a name="[190]"></a>Common_TIM_Base_Initialize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Common_TIM_Base_Initialize &rArr; TIM_Base_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Struct_Initialize
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME2_Init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME3_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME4_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME6_Init
</UL>

<P><STRONG><a name="[17c]"></a>TIME6_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TIME6_Init &rArr; Common_BSTIM_RCC_Initialize &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_On
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Reload_Mode_Set
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_Base_Initialize
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_NVIC_Initialize
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_BSTIM_RCC_Initialize
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[194]"></a>TIME4_Init</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_On
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Reload_Mode_Set
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTI_Line_Set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Initializes
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_Base_Initialize
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_NVIC_Initialize
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_BSTIM_RCC_Initialize
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Peripheral_Initializes
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Enable
</UL>

<P><STRONG><a name="[195]"></a>TIME3_Init</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Struct_Initialize
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_On
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_Base_Initialize
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_NVIC_Initialize
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_BSTIM_RCC_Initialize
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Enable
</UL>

<P><STRONG><a name="[197]"></a>TIME2_Init</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Struct_Initialize
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_On
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_Base_Initialize
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_NVIC_Initialize
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_BSTIM_RCC_Initialize
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Enable
</UL>

<P><STRONG><a name="[198]"></a>ADC_DMA_CH1_Init</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Request_Remap
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Enable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
</UL>

<P><STRONG><a name="[17e]"></a>USART1_DMA_CH3_Init</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART1_DMA_CH3_Init &rArr; DMA_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Request_Remap
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Enable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserSystemInit
</UL>

<P><STRONG><a name="[19b]"></a>RTC_CLKSource_Config</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Backup_Reset
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTC_Clock_Disable
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTC_Clock_Enable
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTC_Clock_Config
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSI_Disable
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSI_Enable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Config
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Clock_Enable
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Stable_Wait
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Config
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_RTC_Backup_Access_Enable
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Wait_For_Synchronization
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Time_Init
</UL>

<P><STRONG><a name="[1a3]"></a>RTC_Time_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Prescaler_Config
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calendar_Initializes
</UL>

<P><STRONG><a name="[180]"></a>BufferManageCreate</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, buffermanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BufferManageCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
</UL>

<P><STRONG><a name="[13e]"></a>BufferManageWrite</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, buffermanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BufferManageWrite &rArr; PutData &rArr; rbWrite &rArr;  rbWrite (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCanWrite
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutData
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[189]"></a>BufferManageRead</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, buffermanage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = BufferManageRead &rArr; rbRead &rArr;  rbRead (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbRead
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCanRead
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Receive_Deal
</UL>

<P><STRONG><a name="[1a5]"></a>rbCreate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, looplist.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferManageCreate
</UL>

<P><STRONG><a name="[33e]"></a>rbDelete</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, looplist.o(.text), UNUSED)

<P><STRONG><a name="[1aa]"></a>rbCapacity</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, looplist.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbWrite
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbRead
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCanWrite
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCanRead
</UL>

<P><STRONG><a name="[1a8]"></a>rbCanRead</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, looplist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rbCanRead
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCapacity
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbRead
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCanWrite
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferManageRead
</UL>

<P><STRONG><a name="[1a6]"></a>rbCanWrite</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, looplist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rbCanWrite &rArr; rbCanRead
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCapacity
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCanRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbWrite
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferManageWrite
</UL>

<P><STRONG><a name="[1a9]"></a>rbRead</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, looplist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + In Cycle
<LI>Call Chain = rbRead &rArr;  rbRead (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCapacity
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbRead
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCanRead
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbRead
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferManageRead
</UL>

<P><STRONG><a name="[1ac]"></a>rbWrite</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, looplist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = rbWrite &rArr;  rbWrite (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbWrite
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCapacity
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbCanWrite
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbWrite
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutData
</UL>

<P><STRONG><a name="[1a7]"></a>PutData</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, looplist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PutData &rArr; rbWrite &rArr;  rbWrite (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufferManageWrite
</UL>

<P><STRONG><a name="[1ad]"></a>FlashHelperReadDataEx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, flash_helper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_init
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_get
</UL>

<P><STRONG><a name="[1af]"></a>FlashHelperWriteWordsEx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, flash_helper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteWords
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_init
</UL>

<P><STRONG><a name="[17a]"></a>FlashHelperEraseSectorEx</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, flash_helper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashEraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kilo_storage
</UL>

<P><STRONG><a name="[172]"></a>flash_helper_init</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, flash_helper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperEraseSectorEx
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperWriteWordsEx
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperReadDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kilo_storage
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_select_init
</UL>

<P><STRONG><a name="[174]"></a>flash_helper_update</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, flash_helper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperEraseSectorEx
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperWriteWordsEx
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kilo_storage
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_select_init
</UL>

<P><STRONG><a name="[1b2]"></a>flash_helper_get</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, flash_helper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperReadDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_get_count
</UL>

<P><STRONG><a name="[173]"></a>flash_data_set_count</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, flash_helper.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kilo_storage
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_select_init
</UL>

<P><STRONG><a name="[171]"></a>flash_data_get_count</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, flash_helper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_helper_get
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kilo_storage
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sector_select_init
</UL>

<P><STRONG><a name="[17b]"></a>STMFLASH_GetFlashSector</STRONG> (Thumb, 316 bytes, Stack size 0 bytes, stmflash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kilo_storage
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashEraseSector
</UL>

<P><STRONG><a name="[1b3]"></a>STMFLASH_ReadWord</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stmflash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
</UL>

<P><STRONG><a name="[1ae]"></a>STMFLASH_Read</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, stmflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperReadDataEx
</UL>

<P><STRONG><a name="[1b1]"></a>FlashEraseSector</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, stmflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_One_Page_Erase
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Status_Get
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_GetFlashSector
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperEraseSectorEx
</UL>

<P><STRONG><a name="[1b0]"></a>FlashWriteWords</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stmflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Word_Program
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Status_Get
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHelperWriteWordsEx
</UL>

<P><STRONG><a name="[1b7]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>

<P><STRONG><a name="[1bd]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[1ba]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromUnorderedEventList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
</UL>

<P><STRONG><a name="[1c9]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[1c4]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromUnorderedEventList
</UL>

<P><STRONG><a name="[1bf]"></a>xTaskCreate</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[1c3]"></a>vTaskDelete</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1c6]"></a>xTaskIncrementTick</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[1c7]"></a>xTaskResumeAll</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[1cb]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[1ca]"></a>vTaskDelayUntil</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>

<P><STRONG><a name="[1cc]"></a>vTaskDelay</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>

<P><STRONG><a name="[1cd]"></a>eTaskGetState</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1ce]"></a>uxTaskPriorityGet</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1cf]"></a>uxTaskPriorityGetFromISR</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[1d1]"></a>vTaskPrioritySet</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[47]"></a>vTaskSwitchContext</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskSwitchContext &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
</UL>

<P><STRONG><a name="[1d2]"></a>vTaskSuspend</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1d4]"></a>vTaskResume</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1d5]"></a>xTaskResumeFromISR</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>

<P><STRONG><a name="[1d7]"></a>vTaskStartScheduler</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[1d9]"></a>vTaskEndScheduler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEndScheduler
</UL>

<P><STRONG><a name="[33f]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[1db]"></a>xTaskGetTickCountFromISR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[340]"></a>uxTaskGetNumberOfTasks</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[1dc]"></a>pcTaskGetName</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1dd]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>

<P><STRONG><a name="[1de]"></a>vTaskPlaceOnUnorderedEventList</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>

<P><STRONG><a name="[1df]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>

<P><STRONG><a name="[1e0]"></a>xTaskRemoveFromUnorderedEventList</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>

<P><STRONG><a name="[1e1]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
</UL>

<P><STRONG><a name="[1e2]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[341]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[342]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[343]"></a>uxTaskResetEventItemValue</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[1e3]"></a>ulTaskNotifyTake</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1e4]"></a>xTaskNotifyWait</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1e5]"></a>xTaskGenericNotify</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1e6]"></a>xTaskGenericNotifyFromISR</STRONG> (Thumb, 286 bytes, Stack size 40 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>

<P><STRONG><a name="[1e7]"></a>vTaskNotifyGiveFromISR</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>

<P><STRONG><a name="[1e8]"></a>xTaskNotifyStateClear</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1c0]"></a>pvPortMalloc</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, heap_4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[1c1]"></a>vPortFree</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[344]"></a>xPortGetFreeHeapSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heap_4.o(.text), UNUSED)

<P><STRONG><a name="[345]"></a>xPortGetMinimumEverFreeHeapSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heap_4.o(.text), UNUSED)

<P><STRONG><a name="[346]"></a>vPortInitialiseBlocks</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heap_4.o(.text), UNUSED)

<P><STRONG><a name="[1be]"></a>pxPortInitialiseStack</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[1eb]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, port.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[1d8]"></a>xPortStartScheduler</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, port.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[1da]"></a>vPortEndScheduler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, port.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskEndScheduler
</UL>

<P><STRONG><a name="[1b9]"></a>vPortEnterCritical</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vPortEnterCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyStateClear
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[1bb]"></a>vPortExitCritical</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyStateClear
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[1ee]"></a>xPortSysTickHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, port.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[1d0]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, port.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGetFromISR
</UL>

<P><STRONG><a name="[1ab]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbWrite
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbRead
</UL>

<P><STRONG><a name="[347]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[348]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[349]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[34a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Receive_Deal
</UL>

<P><STRONG><a name="[34b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[34c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1f1]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[18a]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Receive_Deal
</UL>

<P><STRONG><a name="[136]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_get
</UL>

<P><STRONG><a name="[137]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_get
</UL>

<P><STRONG><a name="[135]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_get
</UL>

<P><STRONG><a name="[138]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_get
</UL>

<P><STRONG><a name="[34d]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1f4]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[34e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[34f]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[1f3]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1f2]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[46]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[350]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1f5]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[351]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[352]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[353]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>__0printf$3</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[354]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[184]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLKSource_Config
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfClockInfo
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Receive_Deal
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskExitError
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEndScheduler
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTaskGetName
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromUnorderedEventList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[355]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[356]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[357]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[48]"></a>System_Clock_Set</STRONG> (Thumb, 254 bytes, Stack size 20 bytes, system_n32g430_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = System_Clock_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Initializes
</UL>

<P><STRONG><a name="[101]"></a>RTC_Hour_Format_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calendar_Initializes
</UL>

<P><STRONG><a name="[102]"></a>RTC_Prescale_Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calendar_Initializes
</UL>

<P><STRONG><a name="[f7]"></a>RTC_Registers_Reset</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Deinitializes
</UL>

<P><STRONG><a name="[fe]"></a>RTC_Bcd2_To_Byte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeStamp_Get
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_Get
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Date_Get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Time_Get
</UL>

<P><STRONG><a name="[100]"></a>RTC_Byte_To_Bcd2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_Set
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Calendar_Initializes
</UL>

<P><STRONG><a name="[157]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[156]"></a>SysTick_Config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, system_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[1a4]"></a>RTC_Prescaler_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Time_Init
</UL>

<P><STRONG><a name="[1b6]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[1b8]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[1bc]"></a>prvInitialiseNewTask</STRONG> (Thumb, 154 bytes, Stack size 56 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[1c5]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[1c2]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[1c8]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
</UL>

<P><STRONG><a name="[1d3]"></a>prvTaskIsTaskSuspended</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
</UL>

<P><STRONG><a name="[1d6]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[42]"></a>prvIdleTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text)
</UL>
<P><STRONG><a name="[1ea]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[1e9]"></a>prvHeapInit</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, heap_4.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[43]"></a>prvTaskExitError</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvTaskExitError &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> port.o(.text)
</UL>
<P><STRONG><a name="[1f8]"></a>_printf_core</STRONG> (Thumb, 436 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
